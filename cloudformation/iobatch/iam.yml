---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template for IAM
Parameters:
  SystemName:
    Description: System Name.
    Type: String
    Default: iobatch
  EnvType:
    Description: Environment Type.
    Type: String
    Default: prd
  S3StackName:
    Description: S3 Stack Name.
    Type: String
    Default: iobatch-prd-s3
Resources:
  # IAM User Groups
  OpsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${SystemName}-${EnvType}-operator-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
      Policies:
        - PolicyName: !Sub ${SystemName}-${EnvType}-operator-batch-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                  - batch:SubmitJob
                  - batch:CancelJob
                  - batch:TerminateJob
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*${SystemName}*
                Effect: Allow
                Action:
                  - iam:PassRole
        - PolicyName: !Sub ${SystemName}-${EnvType}-operator-s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:GetAccountPublicAccessBlock
                  - s3:GetBucketPublicAccessBlock
                  - s3:GetBucketPolicyStatus
                  - s3:GetBucketAcl
                  - s3:ListAccessPoints
              - Resource: !Sub arn:aws:s3:::${SystemName}-${EnvType}*
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
              - Resource: !Sub arn:aws:s3:::${SystemName}-${EnvType}*/*
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:*Object*
                  - s3:*MultipartUpload*
  # IAM Roles
  BatchServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${SystemName}-${EnvType}-BatchServiceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - batch.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /service-role/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSBatchServiceRole
  BatchJobRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${SystemName}-${EnvType}-BatchJobRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${SystemName}-${EnvType}-BatchJobRole-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource:
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-InputBucket
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-InputBucket
                        - /*
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-ReferenceBucket
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-ReferenceBucket
                        - /*
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
              - Resource:
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-OutputBucket
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-OutputBucket
                        - /*
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-ArchiveBucket
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - Fn::ImportValue: !Sub ${S3StackName}-ArchiveBucket
                        - /*
                Effect: Allow
                Action:
                  - s3:Get*
                  - s3:List*
                  - s3:PutObject
  BatchJobExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${SystemName}-${EnvType}-BatchJobExecutionRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
  BatchEc2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${SystemName}-${EnvType}-BatchEc2InstanceRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${SystemName}-${EnvType}-BatchEBS-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              Effect: Allow
              Action:
                - ec2:createTags
                - ec2:createVolume
                - ec2:attachVolume
                - ec2:deleteVolume
                - ec2:modifyInstanceAttribute
                - ec2:describeVolumes
              Resource: '*'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
  BatchEc2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: BatchEc2InstanceRole
  BatchSpotFleetRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - spotfleet.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole
  StepFunctionsExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      Description: !Sub stepfunctions-service-role-${AWS::StackName}-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub states-access-policy-${AWS::Region}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: '*'
              - Effect: Allow
                Action:
                  - states:StartExecution
                Resource: '*'
              - Effect: Allow
                Action:
                  - batch:SubmitJob
                  - batch:DescribeJobs
                  - batch:TerminateJob
                Resource: '*'
              - Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:rule/StepFunctionsGetEventsForBatchJobsRule
Outputs:
  BatchServiceRole:
    Value: !GetAtt BatchServiceRole.Arn
    Description: BatchServiceRole
    Export:
      Name: !Sub ${AWS::StackName}-BatchServiceRole
  BatchJobRole:
    Value: !GetAtt BatchJobRole.Arn
    Description: BatchJobRole
    Export:
      Name: !Sub ${AWS::StackName}-BatchJobRole
  BatchJobExecutionRole:
    Value: !GetAtt BatchJobExecutionRole.Arn
    Description: BatchJobExecutionRole
    Export:
      Name: !Sub ${AWS::StackName}-BatchJobExecutionRole
  BatchEc2InstanceRole:
    Value: !GetAtt BatchEc2InstanceRole.Arn
    Description: BatchEc2InstanceRole
    Export:
      Name: !Sub ${AWS::StackName}-BatchEc2InstanceRole
  BatchEc2InstanceProfile:
    Value: !GetAtt BatchEc2InstanceProfile.Arn
    Description: BatchEc2InstanceProfile
    Export:
      Name: !Sub ${AWS::StackName}-BatchEc2InstanceProfile
  BatchSpotFleetRole:
    Value: !GetAtt BatchSpotFleetRole.Arn
    Description: BatchSpotFleetRole
    Export:
      Name: !Sub ${AWS::StackName}-BatchSpotFleetRole
