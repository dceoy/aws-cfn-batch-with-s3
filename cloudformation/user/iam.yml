---
AWSTemplateFormatVersion: 2010-09-09
Description: AWS CloudFormation Template for IAM user groups
Parameters:
  SystemName:
    Description: System Name.
    Type: String
    Default: iobatch
  EnvType:
    Description: Environment Type.
    Type: String
    Default: prd
Resources:
  CiGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: ci-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
      Policies:
        - PolicyName: ci-ecr-repository-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - ecr:CreateRepository
                  - ecr:DeleteRepository
                  - ecr:DeleteRepositoryPolicy
                  - ecr:DescribeRepositories
                  - ecr:GetRepositoryPolicy
                  - ecr:SetRepositoryPolicy
        - PolicyName: ci-batch-job-definition-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - batch:DeregisterJobDefinition
                  - batch:DescribeJobDefinitions
                  - batch:RegisterJobDefinition
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
        - PolicyName: ci-ecs-task-definition-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - ecs:DeregisterTaskDefinition
                  - ecs:DescribeTaskDefinition
                  - ecs:ListTaskDefinitionFamilies
                  - ecs:ListTaskDefinitions
                  - ecs:RegisterTaskDefinition
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
        - PolicyName: ci-lambda-function-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - lambda:CreateFunction
                  - lambda:DeleteFunction
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                  - lambda:ListFunctions
                  - lambda:UpdateFunctionCode
                  - lambda:UpdateFunctionConfiguration
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - lambda.amazonaws.com
        - PolicyName: ci-state-machines-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:ListStateMachines
                  - states:UpdateStateMachine
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - states.amazonaws.com
  DevGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${SystemName}-${EnvType}-developer-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
        - arn:aws:iam::aws:policy/service-role/AWSLambdaRole
        - arn:aws:iam::aws:policy/ReadOnlyAccess
      Policies:
        - PolicyName: !Sub ${SystemName}-${EnvType}-developer-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                  - batch:RegisterJobDefinition
                  - batch:DeregisterJobDefinition
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - ecs-tasks.amazonaws.com
        - PolicyName: stepfunctions-developer-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                  - states:CreateStateMachine
                  - states:DeleteStateMachine
                  - states:DescribeStateMachine
                  - states:DescribeStateMachineForExecution
                  - states:ListStateMachines
                  - states:UpdateStateMachine
              - Resource: '*'
                Effect: Allow
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                      - states.amazonaws.com
  OpsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: !Sub ${SystemName}-${EnvType}-operator-group
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSLambda_ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonVPCReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonGuardDutyReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSCloudTrailReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess
      Policies:
        - PolicyName: !Sub ${SystemName}-${EnvType}-operator-batch-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - batch:Describe*
                  - batch:List*
                  - batch:SubmitJob
                  - batch:CancelJob
                  - batch:TerminateJob
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*${SystemName}*
                Effect: Allow
                Action:
                  - iam:PassRole
        - PolicyName: !Sub ${SystemName}-${EnvType}-operator-stepfunctions-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - states:Describe*
                  - states:List*
                  - states:*Execution*
              - Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/*${SystemName}*
                Effect: Allow
                Action:
                  - iam:PassRole
        - PolicyName: !Sub ${SystemName}-${EnvType}-operator-s3-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: '*'
                Effect: Allow
                Action:
                  - s3:GetAccountPublicAccessBlock
                  - s3:GetBucketAcl
                  - s3:GetBucketPolicyStatus
                  - s3:GetBucketPublicAccessBlock
                  - s3:ListAccessPoints
                  - s3:ListAllMyBuckets
              - Resource: !Sub arn:aws:s3:::${SystemName}-${EnvType}*
                Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:Get*
                  - s3:List*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
              - Resource: !Sub arn:aws:s3:::${SystemName}-${EnvType}*/*
                Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:Get*
                  - s3:List*
                  - s3:*Object*
                  - s3:*MultipartUpload*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
                  - s3-object-lambda:*Object*
                  - s3-object-lambda:*MultipartUpload*
